public class DLL {
    Node head;
    public class Node {
        public int data;
        public Node prev;
        public Node next;
         Node(int d) { 
             data = d; }
    }
}

public void push(int new_data)
{

	
	Node new_Node = new Node(new_data);

	new_Node.next = head;
	new_Node.prev = null;

	
	if (head != null)
		head.prev = new_Node;

	
	head = new_Node;
}


public void InsertAfter(Node prev_Node, int new_data)
{

	
	if (prev_Node == null) {
		Console.WriteLine("The given previous node cannot be NULL ");
		return;
	}

	
	Node new_node = new Node(new_data);

	
	new_node.next = prev_Node.next;

	
	prev_Node.next = new_node;

	
	new_node.prev = prev_Node;

	
	if (new_node.next != null)
		new_node.next.prev = new_node;
}

class Program
    {
        static void Main(string[] args)
        {
            var list = new DoubleLinkedList();

            list.push(10);
            list.push(5);
            list.InsertAfter(20);
            
            
        }       

